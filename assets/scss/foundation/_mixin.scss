@mixin flex($flow) {
  display: flex;
  align-items: center;
  justify-content: center;
  @if $flow == "column" {
    flex-flow: $flow;
  } @else if $flow == "row" {
    flex-flow: $flow;
  } 
}

@mixin lnhr_flex($fltype,$flow,$align:center,$justify:center) {
    @if $fltype == inline {
        display: inline-flex;
    }@else{
        display: flex;
    }

    @if $flow != '' {
        flex-flow: $flow;
    }

    @if $align {
        align-items: $align;
    }
    @if $justify {
        justify-content: $justify;
    }
}


@mixin transition($timing) {
  transition: all $timing linear;
}

@mixin  cmn_typo($clr:$white,$lh: 16px) {
    font-size: 14px;
    @if $lh {
        line-height: $lh;
    } @else{
        line-height: 16px;
    }

    @if $clr {
        color: $clr;
    } @else{
        color: $white;
    }
    letter-spacing: 1px;
}


// section title
@mixin lnhr_section_title($type) {
    font-size: 22px;
    font-family: $tt_regular;
    line-height: 28px;
    letter-spacing: 1px;
    @if $type == one {     
      font-weight: 400;
      color: #d7cc8f;
      background: -webkit-linear-gradient(80deg, #ac9660 20%, #faf8b4 80%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      font-weight: 400;
      font-family: $tt_regular;
    
    }@else{
        font-weight: 700;
        text-transform: uppercase;
        color: $black;
    }
}

@mixin lnhr_btn($fz: 14px, $px: 27px, $py: 30px) {
  background: linear-gradient(
    270deg,
    #f3eeb1 9.2%,
    #d2c58d 54.69%,
    #f3eeb1 85.82%
  );
  border-radius: 2px;
  color: $black;
  @if $fz {
    font-size: $fz;
  } @else {
    font-size: 14px;
  }

  @if $px and $py {
    padding: $px $py;
  } @else {
    padding: 27px 30px;
  }
  &:hover {
    background: $white;
  }
}


@mixin inlineFlex {
  display: inline-flex;
  align-items: center;
  justify-content: center;
}


$xs: "0";
$sm: "576px";
$md: "768px";
$lg: "992px";
$xl: "1200px";
$xxl: "1400px";


@mixin respond-to($media) {
  @if $media == xs {
    @media only screen and (max-width: $sm) {
      @content;
    }
  } @else if $media == sm {
    @media only screen and (min-width: $sm) {
      @content;
    }
  } @else if $media == md {
    @media only screen and (min-width: $md) {
      @content;
    }
  } @else if $media == lg {
    @media only screen and (min-width: $lg) {
      @content;
    }
  } @else if $media == xl {
    @media only screen and (min-width: $xl) {
      @content;
    }
  } @else if $media == xxl {
    @media only screen and (min-width: $xxl) {
      @content;
    }
  }
}

@mixin orientation($direction) { 

  $orientation-landscape: "(orientation:landscape)"; 
  $orientation-portrait: "(orientation:portrait)";

  @if $direction == landscape {
    @media #{$orientation-landscape} { @content; } 
  }
  @if $direction == portrait {
    @media #{$orientation-portrait} { @content; } 
  }
} 

@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}
@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};
}

@include keyframes(rotation) {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
